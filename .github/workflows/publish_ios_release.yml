name: ios-build-action

# 推送Tag时触发
on:
  push:
    tags:
      - "ios_*"

jobs:
  build-ios:
    # 使用一个较新的、稳定的macOS版本
    runs-on: macos-13

    permissions:
      contents: write

    steps:
      # 步骤 1: 签出代码
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: master

      # 步骤 2: 明确指定 Xcode 版本
      - name: Select Xcode version
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '15.2' # 你可以根据需要选择一个稳定的版本

      # 步骤 3: 设置 Java 环境 (如果Android构建也在此，否则为iOS构建可选)
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: "17"

      # 步骤 4: 设置 Flutter 环境
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.x'
          cache: true

      # 步骤 5: 更新 Flutter 的 packages
      - name: Restore Flutter packages
        run: |
          cd simple_live_app
          flutter pub get

      # 步骤 6: 强制设置所有 Pods 的 iOS 部署目标
      - name: Set iOS deployment target for all Pods
        run: |
          cd simple_live_app/ios
          # 在 Podfile 的末尾添加一个 post_install 钩子
          echo "
          post_install do |installer|
            installer.pods_project.targets.each do |target|
              target.build_configurations.each do |config|
                config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '12.0'
              end
            end
          end
          " >> Podfile

      # 步骤 7: 清理并安装 iOS 依赖
      - name: Clean and install iOS dependencies
        run: |
          cd simple_live_app
          flutter clean
          cd ios
          rm -rf Pods Podfile.lock
          pod install --repo-update

      # 步骤 8: 打包 iOS 应用 (IPA)
      - name: Build IPA
        run: |
          cd simple_live_app
          flutter build ios --release --no-codesign

      # 步骤 9: 创建未签名的 IPA 文件
      - name: Create unsigned IPA
        run: |
          cd simple_live_app
          mkdir -p build/ios/iphoneos/Payload
          cp -R build/ios/iphoneos/Runner.app build/ios/iphoneos/Payload/Runner.app
          cd build/ios/iphoneos/
          zip -r ios_no_sign.ipa Payload

      # 步骤 10: 上传 IPA 至 Artifacts
      - name: Upload IPA to Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ios-unsigned-ipa
          path: simple_live_app/build/ios/iphoneos/ios_no_sign.ipa

      # 步骤 11: 读取版本信息
      - name: Read version information
        id: version
        uses: juliangruber/read-file-action@v1
        with:
          path: assets/app_version.json

      - name: Echo version details
        run: |
          echo "Version: ${{ fromJson(steps.version.outputs.content).version }}"
          echo "Version Description: ${{ fromJson(steps.version.outputs.content).version_desc }}"

      # 步骤 12: (可选) 上传至 Release
      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/') # 仅在推送 tag 时运行
        with:
          name: "iOS ${{ fromJson(steps.version.outputs.content).version }}"
          body: "# iOS版本\n${{ fromJson(steps.version.outputs.content).version_desc }}"
          prerelease: ${{ fromJson(steps.version.outputs.content).prerelease }}
          token: ${{ secrets.TOKEN }}
          files: |
            simple_live_app/build/ios/iphoneos/ios_no_sign.ipa

      # 步骤 13: 完成提示
      - name: Finalizing build
        run: echo "🍎 iOS build completed with status ${{ job.status }}."